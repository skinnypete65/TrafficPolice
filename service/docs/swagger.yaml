basePath: /
definitions:
  dto.Camera:
    properties:
      camera_id:
        type: string
      camera_type_id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      short_desc:
        type: string
    required:
    - camera_type_id
    - latitude
    - longitude
    - short_desc
    type: object
  dto.CameraType:
    properties:
      camera_id:
        type: string
      camera_name:
        type: string
    required:
    - camera_name
    type: object
  dto.ConfirmExpertInput:
    properties:
      expert_id:
        type: string
      is_confirmed:
        type: boolean
    required:
    - expert_id
    type: object
  dto.RegisterCamera:
    properties:
      camera:
        $ref: '#/definitions/dto.Camera'
      sign_up:
        $ref: '#/definitions/dto.SignUp'
    required:
    - camera
    - sign_up
    type: object
  dto.SignInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.SignInOutput:
    properties:
      accessToken:
        type: string
      refresh_token:
        type: string
    type: object
  dto.SignUp:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  response.Body:
    properties:
      message:
        type: string
    type: object
  response.IDResponse:
    properties:
      id:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for Traffic Police Application
  title: Traffic Police API
  version: "1.0"
paths:
  /auth/confirm/expert:
    post:
      consumes:
      - application/json
      description: Подтверждение эксперта по id. Может делать только директор
      operationId: auth-confirm-expert
      parameters:
      - description: id эксперта и информация о подтверждении
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.ConfirmExpertInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SignInOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Body'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Body'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Body'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Body'
      security:
      - ApiKeyAuth: []
      summary: Подтверждение эксперта
      tags:
      - auth
  /auth/sign_in:
    post:
      consumes:
      - application/json
      description: Вход для всех пользователей по логину и паролю
      operationId: auth-sign-in
      parameters:
      - description: Логин и пароль
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SignInOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Body'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Body'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Body'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Body'
      summary: Вход пользователей
      tags:
      - auth
  /auth/sign_up:
    post:
      consumes:
      - application/json
      description: Регистрация эксперта по логину и паролю
      operationId: auth-sign-up
      parameters:
      - description: Логин и пароль
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.SignUp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Body'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Body'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Body'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Body'
      summary: Регистрация эксперта
      tags:
      - auth
  /camera:
    post:
      consumes:
      - application/json
      description: Регистрировать камеру может только директор. Возвращает id камеры
      operationId: create-camera
      parameters:
      - description: Информация о камере
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterCamera'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.IDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Body'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Body'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Body'
      security:
      - ApiKeyAuth: []
      summary: Регистрация камеры
      tags:
      - camera
  /camera/type:
    post:
      consumes:
      - application/json
      description: Регистрировать новый вид камеры может только директор. Возвращает
        id вида камеры
      operationId: create-camera-type
      parameters:
      - description: Информация о виде камеры
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CameraType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.IDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Body'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Body'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Body'
      security:
      - ApiKeyAuth: []
      summary: Регистрация вида камеры
      tags:
      - camera
  /case:
    post:
      consumes:
      - application/octet-stream
      description: Принимает бинарную строку в описанном формате. Добавить проишествие
        может только камера
      operationId: case-add
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.IDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Body'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Body'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Body'
      security:
      - ApiKeyAuth: []
      summary: Добавление информации о проишествии
      tags:
      - case
  /case/{id}/img:
    get:
      consumes:
      - multipart/form-data
      description: Получение фотографии проишествия по id прошествия. Воспользоваться
        могут эксперт или директор
      operationId: case-image-get
      parameters:
      - description: id камеры
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Body'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Body'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Body'
      security:
      - ApiKeyAuth: []
      summary: Получение фотографии проишествия
      tags:
      - case
    post:
      consumes:
      - multipart/form-data
      description: Принимает фотографию и сохраняет ее по переданному id. Добавить
        фотографию может только камера
      operationId: case-image-upload
      parameters:
      - description: id камеры
        in: query
        name: id
        required: true
        type: string
      - description: Фотография проишествия
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Body'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Body'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Body'
      security:
      - ApiKeyAuth: []
      summary: Добавление фотографии к проишествию
      tags:
      - case
  /contact_info:
    post:
      consumes:
      - multipart/form-data
      description: 'Принимает excel файл в формате по столбикам: Буквы авто:Номера
        авто:Регион:Номер телефона:email:VK ID: Tg ID. Только директор может загрузить
        файл'
      operationId: insert-contact-info
      parameters:
      - description: Excel файл с контактной информацией
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Body'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Body'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Body'
      security:
      - ApiKeyAuth: []
      summary: Ввод информации о транспорте и его владельце
      tags:
      - contact_info
  /violations:
    post:
      consumes:
      - multipart/form-data
      description: 'Принимает excel файл в формате по столбикам: Название правонарушения:Размер
        штрафа. Только директор может загрузить файл'
      operationId: insert-violations
      parameters:
      - description: Excel файл с информацией о правонарушениях
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Body'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Body'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Body'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Body'
      security:
      - ApiKeyAuth: []
      summary: Ввод информации о правонарушениях
      tags:
      - contact_info
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
